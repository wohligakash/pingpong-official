name: Build-Commit-Push-Jira-Transition

on:
    push:
        branches:
            - dev

jobs:

    Build-Manifest-Push:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@main

            # - name: login to docker hub
            #   uses: docker/login-action@v2
            #   with:
            #     username: ${{ secrets.DOCKERHUB_USERNAME }}  
            #     password: ${{ secrets.DOCKERHUB_TOKEN }}

            # - name: Set env
            #   run: echo "GITHUB_BRANCH=$(echo $GITHUB_REF_NAME-$GITHUB_SHA)" >> $GITHUB_ENV

            # - name: Helm installation
            #   run: |                    
            #       curl -LO https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz
            #       tar -zxvf helm-v3.8.0-linux-amd64.tar.gz
            #       mv linux-amd64/helm /usr/local/bin/helm
            #       helm version

            # - name: Build the Docker image
            #   run: |
            #       docker build -t wohligakash/pingpong:$GITHUB_REF_NAME-$GITHUB_SHA . 
            #       docker push wohligakash/pingpong:$GITHUB_REF_NAME-$GITHUB_SHA

            # - name: Helm template and git--push
            #   run: |

            #       git clone https://${{ secrets.USERNAME_GITHUB }}:${{ secrets.AUTH_TOKEN }}@github.com/Fair-Play-Club/Helm-GitOps-Test.git
            #       cd Helm-GitOps-Test

            #       yq e '.fairplay-api.image = "faiplay-api:${{ env.GITHUB_BRANCH }}"' -i Helm-GitOps/fairplay-api-deployments-values.yaml
            #       helm template helm-g ./Helm-GitOps --values ./Helm-GitOps/fairplay-api-deployments-values.yaml > manifest-file/manifests.yaml

            #       git config user.name "$GITHUB_ACTOR"
            #       git config user.email ${{ secrets.USER_EMAIL_GITHUB }}

            #       git add .
            #       git commit -m "Updating newer image"
            #       git push origin master

            - name: Postman CI
              run: |

                  git clone https://${{ secrets.USERNAME_GITHUB }}:${{ secrets.AUTH_TOKEN }}@github.com/PlayExchange/postman-automation.git

                  cd postman-automation

                  npm install -g newman
                  npm install -g newman-reporter-htmlextra
      
                  newman run "Collections/Cricket_Bet_Flow_Matched.postman_collection.json" -e "Env/PlayEnv.postman_environment.json" --reporters cli,htmlextra --reporter-htmlextra-export Cricket_Bet_Flow_Matched-report.html || true
              
                  newman run "Collections/Cricket_Bet_Flow_Unmatched.postman_collection.json" -e "Env/PlayEnv.postman_environment.json" --reporters cli,htmlextra --reporter-htmlextra-export Cricket_Bet_Flow_Unmatched-report.html || true
              
                  newman run "Collections/RESTful_API_Basics.postman_collection.json" -e "Env/PlayEnv.postman_environment.json" --reporters cli,htmlextra --reporter-htmlextra-export RESTful_API_Basics-report.html || true
              
                  newman run "Collections/Soccer_Bet_Flow_Matched.postman_collection.json" -e "Env/PlayEnv.postman_environment.json" --reporters cli,htmlextra --reporter-htmlextra-export Soccer_Bet_Flow_Matched-report.html || true
              
                  newman run "Collections/Soccer_Bet_Flow_Unmatched.postman_collection.json" -e "Env/PlayEnv.postman_environment.json" --reporters cli,htmlextra --reporter-htmlextra-export Soccer_Bet_Flow_Unmatched-report.html || true
              
                  newman run "Collections/Tennis_Bet_Flow_Matched.postman_collection.json" -e "Env/PlayEnv.postman_environment.json" --reporters cli,htmlextra --reporter-htmlextra-export Tennis_Bet_Flow_Matched-report.html || true
              
                  newman run "Collections/Tennis_Bet_Flow_Unmatched.postman_collection.json" -e "Env/PlayEnv.postman_environment.json" --reporters cli,htmlextra --reporter-htmlextra-export Tennis_Bet_Flow_Unmatched-report.html || true

            - name: Publish Report
              uses: actions/upload-artifact@v3
              # with:
              #   name: Reports
              #   path: /

    # Jira-ticket-transition:
    #     runs-on: ubuntu-latest
    #     needs: Build-Manifest-Push
    #     steps:

    #         - name: Jira Login
    #           uses: atlassian/gajira-login@master
    #           env:
    #             JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
    #             JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
    #             JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
                
    #         - name: Find
    #           id: issue-key
    #           uses: atlassian/gajira-find-issue-key@v3
    #           with:
    #             string: ${{ github.ref }}

    #         - name: Transition issue
    #           uses: atlassian/gajira-transition@v3
    #           with:
    #             issue: ${{ steps.issue-key.outputs.issue }}
    #             transition: "In Progress"